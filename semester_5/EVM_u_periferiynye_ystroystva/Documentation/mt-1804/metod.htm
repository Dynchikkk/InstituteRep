<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Учебник по микропроцессорам К1804t</title>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
	<meta name="author" content="Pavel as Student">
	<title>Изучение микропроцессорного комплекса К1804 и микроЭВМ  на его основе</TITLE>
	<style>	H1    {text-align : center; font-size : 18px; background : #005000; margin-left : -10; color : #ffffff;}
		H4    {text-align : center;}
		A     {color : black; acolor ; black; vcolor : black;font-weight : bold; font-face : "Tahoma";}
		TABLE {width : 90%; text-align : justify;padding-left : 10;}
	</style>
</head>
<body background="img/rect.gif" bottommargin="0" leftmargin="0" marginheight="0"  marginwidth="0" 
rightmargin="0" topmargin="0" bgproperties=" fixed">
<center>
<table align="center" width="610">
<tr> <td>
<div >
	<center>Министерство высшего и среднего специального  образования</center>
	<center>Российской Федерации</center><br>
	<center>Пензенский Государственный Университет</center> 
	<center>Изучение микропроцессорного комплекса К1804 и микроЭВМ  на его основе	</center><br>
	<center>Описание лабораторных работ	</center>
</div>
</td>
</tr>
</table>
<A NAME = '1.Описание лабораторной установки'></A><H1>1.Описание лабораторной установки</H1>
  <a name = 'Характеристика мкпроца'></a>
<H4>Общая характеристика микропроцессорного комплекта К1804</H4>
<table><p>Комплект относится к классу так называемых секционированных микропроцессоров, 
которые не имеют заранее фиксированной системы команд и разрядности обрабатываемых 
слов, чем отличаются от однокристальных микропроцессоров (например, комплекта К-580).
 БИС, входящие в состав комплекта, реализуют не целиком процессор универсальной ЭВМ, 
 а лишь его отдельные части(секции): арифметико-логическое устройство, блок 
 микропрограммного управления, интерфейсные схемы и др.; кроме того, программирование
  ведется на микропрограммном уровне, что обеспечивает большую гибкость логической 
  организации систем, построенных на основе комплекта К1804. Высокое быстродействие 
  БИС комплекта, выполненных на схемотехнической базе стандартной транзисторно-транзисторной 
  логики с диодами Шотки(ТТЛШ), обеспечивают широкое применение комплекта К1804
   для построения высокопроизводительных управляющих и вычислительных систем
   (до нескольких млн. оп/с). Состав основные технические характеристики комплекта
    приведены в <a href ='img/pic_tab1.gif' background="img/rect.gif" target="list" >таблице 1.</a>Изучение архитектуры, основ микропрограммирования 
	и принципов применения комплекта К1804 ведется на микротренажере МТ-1804, 
	который представляет собой простую 4-разрядную микроЭВМ с типовой структурной
	организацией.
</p>
</table>
  <div align="left"><A NAME = '2.Операционный узел микротренажера'></A></div>
  <H1>2.Операционный узел микротренажера</H1>
<table><p>Структурная схема микротренажера приведена на <a href ='img/pic1.gif'target ="list">рис 1.</a> Функционально микротренажер делится на
 два узла: операционный и узел управления.</p>
 <p>В операционном узле выполняется обработка данных. Операционный  узел содержит: БИС процессорной секции К1804ВС1; 4-разрядный регистр состояний и мультиплексор 
 призна-ков (флагов) состояний; мультиплексор сдвига, регистр выходных данных.</p>
 <p>Структура процессорной секции К1804ВС1 приведена на  <a href ='img/pic2.gif' target="list">рис 2.</a> Секция представляет 
 собой четырехразрядную обрабатывающую часть универсального процессора и содержит:
  регист-ровое ЗУ емкостью в 16 четырехразрядных чисел (ячейки ЗУ в дальнейшем 
  будем называть ре-гистрами общего назначения РОН); комбинационное арифметическо-логическое 
  устройство (АЛУ); дополнительный регистр PQ; комбинационные схемы сдвигов РОН (СДРОН) 
  и регистра Q (СДQ); мультиплексор источника операнда АЛУ (MS1); мультиплексор выходных
   данных (MS2); дешифраторы ДС1, ДС2, ДС3.</p>
 <p>Входные и выходные сигналы микросхемы К1804ВС1 имеют следующее назначение:
  А[3/0], В[3/0], - сигналы адресов А и В. Служат для выбора одного из 16 регистров РОН; 
  I[8/0] - сигналы режима работы микросхемы, D[3/0] - входные данные; Y[3/0] - выходные 
  данные;  - разрешение выдачи результата; C0, C4 - вход и выход цепи последовательного 
  переноса;   и   - сигналы пропускания и генерации переноса для схем ускоренного переноса; 
  F3 - старший раз-ряд результата АЛУ (знаковый); OVR - переполнение; Z - признак нулевого
   результата (F[3/0] = 0000); PR0, PR3, PQ0, PQ3 - сигналы, необходимые для организации 
   сдвига информации, запи-сываемой в РОН и PQ.</p> 
 <p>АЛУ служит для выполнения арифметических операций над кодами R и S, поступающими
  на его входы. На выходе АЛУ формируется код результата F[3/0], а также сигналы 
  признаков и переносов (см. <a href ='img/pic2.gif' target="list">рис 2.</a>).</p>
 <p>Шестнадцать РОН и PQ необходимы для временного хранения промежуточных результатов.
  Адресация регистров общего назначения РОН производится четырехразрядными сигналами
   A[3/0] и B[3/0] по двум каналам А и В. По каналу В может производиться запись и чтение
   данных, а по каналу А - только чтение.</p>
 <p>Схемы сдвигов СДРОН и СДQ обеспечивают сдвиг на 1 разряд вправо
  или влево инфор-мации при записи в РОН и PQ, а также запись без сдвига. 
  Мультиплексор MS1 обеспечивает вы-бор двух операндов R и S на входы АЛУ из 
  четырех сигналов D[3/0], А[3/0], В[3/0], RQ[3/0]. Мультиплексор MS2 пропускает
   на выход Y[3/0] либо A[3/0], либо F[3/0]. Задание режима рабо-ты микропроцессорной
    секции К1804ВС1 производится девятиразрядным кодом I[8/0], который 
	разбивается на три части: I[8/6], I[5/3], I[2/0].</p>
 <p>Код I[5/3] задает операцию в АЛУ над операндами R и S в соответствии с  <a href ='img/pic_tab2.jpg' target="list">таблицей 2</a>, из которой видно, что АЛУ может выполнять три арифметические операции (операции 1-3) и 5 ло-гических операций (операции 4-8). При выполнении арифметических операций числа представ-ляются в дополнительном коде со знаком с учетом значения входного переноса C0. Так, напри-мер, если складываются два числа: 1110 (-210) и 1101 (-310), и если С0 =0, то получится результат 1011 (-510). При этом перенос из старшего разряда С3 будет равняться единице. Логические опе-рации выполняются поразрядно. Выходы ускоренных переносов   и   используются для рабо-ты со схемой ускоренного переноса 1804ВР1 (в микротренажере она не используется).</p>
 <p>Код I[2/0] управляет работой мультиплексора MS1 и задает источники операндов, кото-рые поступают на входы R и S, в соответствии с <a href ='img/pic_tab3.gif' target="list">таблицей 3</a>. Рассмотрим несколько примеров.</p>
 <p><em><strong>Пример 1.</strong> </em>Пусть I[5/3] = 000, I[2/0] = 001. Из таблицы 2 находим, что I[5/3] = 000=08 и задает операцию R+S+C0, а из таблицы 3 находим, что при I[2/0] = 001=18 в качестве R выступает A, а в качестве S - B. Следовательно, на выходе АЛУ будет фиксироваться код F, равный A+B+C0, где А и В - коды, поступающие из регистров общего назначения, адреса которых задаются соответственно сигналами A[3/0], B[3/0] (см. <ahref ='img/pic2.gif' target="list">рис 2.</a> ).</p>
 <p><em><strong>Пример 2.</strong> </em>Пусть I[5/3]=010, что определяет необходимость выполнения операции R-S-1+C0 (см. табл. 2), а I[2/0]=111. В соответствии с последним кодом в качестве R и S выступают D и O; следовательно, на выходе АЛУ будет формироваться код F=D-O-1+C0.</p>
 <p>Если C0=0, то на выходе АЛУ будет вырабатываться код F=D-1; если C0=1, - то выра-батывается код F=D+0.
Сигналы I[8/6] управляют результатом: выдачей результата на шины Y[3/0], записью в регистры Q и B (со сдвигом или без сдвига), сдвигом информации в регистре Q. Управление ре-зультатом осуществляется в соответствии с <a href ='img/pic_tab4.jpg' target="list">таблицей 4</a>. Рассмотрим следующие примеры:
</p>
<p><em><strong>Пример 1.</strong> </em>I[8/6]=000. Результат с выхода АЛУ записывается в PQ, на выход Y выдается код с выхода АЛУ.</p>
<p><em><strong>Пример 2.</strong> </em>I[8/6]=010. Результат с выхода АЛУ записывается в РОН, адрес которого указывается сигналами B[3/0]. На выход Y выдается содержимое РОН, адрес которого указан сигналами A[3/0].</p>
<p><em><strong>Пример 3.</strong> </em>I[8/6]=100. Информация с выхода АЛУ записывается в РОН по адресу B[3/0] со сдвигом на 1 разряд вправо, содержимое PQ сдвигается вправо на 1 разряд. На выход Y выдается код с выхода АЛУ.</p>
<p>Микрооперации сдвигов выполняются комбинационными схемами СДРОН и СДQ, вы-полняющими передачу кодов F[3/0] с выхода АЛУ либо без смещения, либо со смещением в сторону младших разрядов (сдвиг вправо). Примеры работы двигателя СДРОН приведены на <ahref ='img/pic3.gif' target="list">рис 3.</a> . Двигатель СДQ работает аналогично. При формировании значений крайних разрядов ре-зультата сдвига (разряда "0" при левом сдвиге и разряда "3" при правом) используются значения внешних сигналов PR0, PR3, PQ0, PQ3. Эти же сигналы могут принимать значения "выталки-ваемых" разрядов <ahref ='img/pic3.gif' target="list">рис 3.</a> . На рис. 3, а, б, в показаны соответственно передачи информации без сдвига, со сдвигом влево, со сдвигом вправо.</p>
<p>Для выполнения сдвигов различных типов (арифметических, циклических и др.) с по-мощью внешних схем организуется коммутация информации на двунаправленных шинах PR и PQ. В узле обработки коммутация выполняется посредством двух мультиплексоров K555КП12, имеющих трехстабильные выходы.</p>
<p>Мультиплексорами управляют два специальных сигнала S1 и S2 и разряд 17 кода мик-рокоманды процессорной секции, определяющий направление сдвига (<a href ='img/pic4.gif' target="list">рис 4.</a>). Правила комму-тации иллюстрирует <a href ='img/pic5.gif' target="list">рис 5.</a></p>
<p>При выполнении операций в АЛУ формируется 4 признака, которые заносятся на ре-гистр состояния (РСТ) и могут программно опрашиваться с помощью мультиплексора флагов для организации переходов по условию. Значения разрядов PCT зависят от следующих призна-ков:</p>
<p align="center">РСТ[0] - z	;	РСТ[1] - F3</p>
<p align="center">РСТ[2] - OVR	;	РСТ[3] - C4</p>
<p>Формирование очередных значений РСТ происходит в каждом такте, за исключением микрокоманд условных переходов, на которых содержимое РСТ не меняется.</p>

 <div align="left"><A NAME = '3.УЗЕЛ УПРАВЛЕНИЯ МИКРОТРЕНАЖЕРА'></A></div><H1>3. УЗЕЛ УПРАВЛЕНИЯ МИКРОТРЕНАЖЕРА</H1>
<p>Запись и хранение микропрограмм работы устройства, выработку управляющих сигна-лов и данных в узел 
обработки, а также управление использованием последовательности микро-команд выполняет узел, который
 включает в себя: БИС управления адресом микрокоманды К1804ВУ1; память микропрограмм емкостью 16 
 32-разрядных кодов; 32-разрядный регистр микрокоманд; мультиплексор флагов (MSF); схему управления 
 выборкой следующего адреса, представляющую собой ПЗУ емкостью 32х8 бит; схему управления 
 синхронизацией, вырабаты-вающую синхросигналы; органы управления и контроля за работой микротренажера.
Программирование работы устройства выполняется на микропрограммном уровне. Формат микрокоманд 
показан в <a href ='img/pic_tab5.jpg' target="list">таблице 5</a>, в которой имеются следующие обозначения: D - вход-ные данные; B - адрес РОН по
 каналу B; A - адрес РОН по каналу А; АЛУ - код управления функцией АЛУ; S1, S2 - биты управления 
 операциями сдвига; С0 - входной перенос в АЛУ; I0, …, I8 - управление центральной процессорной
  секцией; P0, …, P3 - управление выборкой следующего адреса. Назначение отдельных разрядов 
  приведено в <a href ='img/pic_tab6.jpg' target="list">таблице 6</a>. Как видно из этих таб-лиц, разряды     0-23 микрокоманды используются для 
  управления операционным узлом (в ос-новном задают сигналы в секцию К1804ВС1), а разряды 24-31
  используются для кодирования адреса следующей микрокоманды и используются для секции К1804ВУ1, 
  являющейся ядром уз-ла управления.</p>
  <p>Структурная схема секции К1804ВУ1 показана на <a href ='img/pic6.gif' target="list">рис 6.</a>. Эта схема обеспечивает формирование 
  адреса очередной микрокоманды, генерируя 4-разрядный адрес. Схема содержит: ре-гистр адреса РА; 
  мультиплексор адреса MSA; счетчик микрокоманд (СМК), включающий ре-гистр счетчика микрокоманд 
  (РСМК) и инкрементор ИНК; схему маскирования на 4 элементах ИЛИ; буферную схему с трехстабильным
   выходом БУ; стек емкостью 4 четырехразрядных чи-сел.
На <a href ='img/pic6.gif' target="list">рис 6.</a> показаны также входные и выходные сигналы для схемы управления: D[3/0] - сигналы на 
прямых входах адреса, которые могут использоваться для задания адреса следующей микрокоманды; 
R[3/0] - сигналы на входах регистра адреса. Данные сигналы имеются только в микросхеме К1804ВУ1.
 В микросхеме К1804ВУ2 они отсутствуют: OR[3/0] - сигналы маски имеются только в микросхеме К1804ВУ1. 
 В микросхеме К1804ВУ2 они отсутствуют:  <u>RE</u> - сигнал разрешения записи в РА;  <u>ZA</u> - сигнал установки нулевого адреса; 
 S0, S1 - сигналы управления мультиплексором; <u>OE</u> -сигнал разрешения вывода информации из схемы
  управления адресом микрокоманд (СУ-АМ); <u>FE</u> , PUP - сигналы управления стеком; C0, C4 - сигналы входного
   и выходного перено-сов; Т - тактовый сигнал; Y[3/0] - выходные сигналы</p>
 <p>Мультиплексор выбирает источник адреса следующей микрокоманды в зависимости 
        от значения сигналов S0, S1 (<a href ='img/pic_tab7.jpg' target="list">табл7,a </a>). Сигнал с выхода мультиплексора 
        может маскироваться на схеме ИЛИ сигналом OR[3/0]. Эта операция производится 
        только для К1804ВУ1, при использо-вании К1804ВУ2 эта возможность отсутствует. 
        Сигнал  <u>ZA</u>=0 устанавливает нулевой сигнал на выходе схемы И. Выходной сигнал 
        Y[3/0] клапанируется сигналом . Управление выходными сигналами показано 
        в <a href ='img/pic_tab7.jpg' target="list">табл.7,b</a>. Регистр адреса РА может использоваться для временного хранения 
        адреса, принятого по шинам R[3/0] (для микросхемы К1804ВУ2 - по шинам 
        D[3/0]). </p>
    <p>Регистр РСМК и инкрементор ИНК в совокупности представляют собой счетчик 
        микро-команд. При С0=1 содержимое РСМК увеличивается на единицу, при С0=0 
        оно не изменяется. Стек имеет глубину 4 слова. Он может использоваться 
        для обращения к подпрограммам, когда необходим переход с возвратом. Управление 
        стеком производится сигналами  <u>FE</u> и PUP. При это возможны жимы работы стека: 
        увеличение указателя стека и запись ( <u>FE</u>=0, PUP=1); уменьшение указателя 
        стека и считывание (<u>FE</u> =0, PUP=0); считывание без изменения указателя стека 
        ( <u>FE</u>=0,PUP=0v1). </p>
<p>Управление работой стека показано <a href ='img/pic_tab7.jpg' target="list">табл.7,в</a> .
Все возможные воздействия сигналов S1, S0, <u>FE</u> , PUP приведены в <a href ='img/pic_tab8.jpg' target="list">табл.8</a>.</p>
<p>Основные функции по управлению следующим адресом выполняют сигналы S1, S0,<u>FE</u> , PUP. Они определяют адрес и содержимое регистров.</p>
<p>Рассмотрим примеры работы схемы управления адресом при С0=1. Будем считать, что содержимое РСМК=j, РА=k, верхняя ячейка (СТ0) содержит слово RA. Остальные ячейки стека обозначены как СТ1, СТ2, СТ3.
Пусть S1=0; S0=1;  <u>FE</u>=1; PUP=0 или 1. Сигналы S1 и S0 обеспечивают передачу на вы-ход содержимого PA. Так как  <u>FE</u>=1, то стек отключен, поэтому в следующем такте содержимое стека не изменяется. Содержимое РСМК в следующем такте будет увеличено на единицу.
Пусть S1=0, S0=1,  <u>FE</u>=0, PUP=1. Так как и в предыдущем примере S1=0, S0=1, следова-тельно, через мультиплексор будет проходить содержимое РА, т.е. Y=K, а в следующем такте на выходе РСМК будет слово K+1. Так как <u>FE</u> =0, то стек включен; причем PUP=1 задает режим записи в стек, при этом все содержимое стека будет сдвинуто на один разряд, а крайнее слово потеряется ("вытолкнется" из стека).
Пусть S1=0, S0=0,  <u>FE</u>=0, PUP=0. Такое сочетание сигналов задает операцию чтения ин-формации из стека. Указатель стека уменьшается на единицу.</p>
<p>Операции с адресом по сигналам S1, S0, <u>FE</u> , PUP позволяют реализовать различные ва-рианты вычисления адреса следующей микрокоманды (см. <a href ='img/pic_tab8.jpg' target="list">табл.8</a>).</p>
<p>Для упрощения микропрограммирования в поля кода микрокоманды, отводимой для БИС К1804ВУ1, записывают не значения комбинаций сигналов S1, S0, <u>FE</u> , PUP, а код номера 
P[3/0] одного из 16 возможных переходов к адресу следующей микрокоманды. Этот код посту-пает в ПЗУ емкостью 
32х8, реализованные на ИС К155РЕ3, запрограммированной в соответст-вии с <a href ='img/pic_tab9.jpg' target="list">табл.9</a>, в которой Q0 - сигнал PUP, т.е. 
сигнал, который управляет стеком БИС К1804ВУ1; Q1 - сигнал <u>FE</u>, т.е. сигнал разрешения работы стека БИС К1804ВУ1;
 Q2 - сигнал S1, т.е. первый разряд управления мультиплексором БИС К1804ВУ1;  Q2 - сигнал S0, т.е. нуле-вой разряд 
 управления мультиплексором БИС К1804ВУ1; Q4, Q5, Q6 - сигналы маски OR0, OR1, OR2 БИС К1804ВУ1;
  Q7 - управляет регистром состояния; Х - произвольный логиче-ский уровень. Постоянное запоминающее устройство 
  (ПЗУ) вырабатывает комбинации управ-ляющих сигналов в схему К1804ВУ1 и в другие схемы микротренажера, 
  обеспечивающие вы-полнение заданного набора функций перехода в соответствии с <a href ='img/pic_tab10.gif' target="list">табл.10</a>).</p>
  <p>Код P[3/0] управляет также мультиплексором флагов MSF, формирующим сигнал признаков условий по 
  значению регистра РСТ. Этот сигнал непосредственно подается на младший разряд адреса ПЗУ и управляет 
  адресом перехода.</p>
  <p>Память микрокоманд выполнена на 8 ИС 155РУ2 и может работать как на запись кодов разрядов микрокоманд, выполняемую потетрадно с набирателей пульта управления микротре-нажера в режиме ЗАГРУЗКА, так и на чтение 32-разрядных кодов микрокоманд с их занесением на регистр РМК. Адрес обращения к памяти 
  устанавливается в режиме ЗАГРУЗКА набирателем АДРЕС, а в режиме РАБОТА формируется БИС К1804ВУ1.</p>
  <p>Схема управления синхронизацией вырабатывает тактовые сигналы, которые поступают в остальные схемы тренажера. Устройство 
  аботает в двух режимах: пошаговом и автоматиче-ском.</p>
  <p>При первом режиме тактирование осуществляется от генератора одиночных импульсов
   при нажатии переключателя ПУСК. При втором режиме тактирование выполняет внутренний
    тактовый генератор с частотой не выше 2 МГц, подключение которого осуществляется через клемму XP4. 
	Органы управления и контроля за работой микротренажера включают в себя пере-ключатели и набиратели 
	на пульте и плате устройства, используемые для задания режимов его работы и управления программированием
	 и выполнением задач, и 3,4-разрядных индикатора и мультиплексоры: ДАННЫЕ, МИКРОКОМАНДА и ПАМЯТЬ, 
	 используемые для контроля за ра-ботой микротренажера. Светодиодные индикаторы ПАМЯТЬ и МИКРОКОМАНДА 
	 через муль-типлексоры осуществляют потетрадную индикацию состояний выхода схем памяти и регистра 
	 микрокоманд. Номер выводимых на индикацию тетрад задает трехразрядный набиратель МУЛЬТИПЛЕКСОР.
  Индикатор ДАННЫЕ может подключатся к различным точкам устройства согласно <a href ='img/pic_tab11.gif' target="list">табл.11</a>.</p>
  <p>Органы управления микротренажера включают в себя 4-разрядные набиратели АДРЕС (SA8 - SA11) и ДАННЫЕ (SA4 - SA7), 3-разрядный набиратель МУЛЬТИПЛЕКСОР (SA1 - SA3), переключатель режимов ЗАГРУЗКА/РАБОТА (SA12) кнопки ЗАГРУЗКА (SB1) и ПУСК (SB2). Кроме того непосредственно на плате микротренажера установлены переключатели ре-жимов работы ШАГ/АВТОМАТ (SA13) и генератора синхросигналов ВНУТРЕН-НИЙ/ВНЕШНИЙ (SA14). На плате имеются также 3 контрольные точки, позволяющие подклю-чать осциллограф для оценки временных параметров БИС: XP2 - сигнал переноса счетчика мик-рокоманд БИС К1804ВУ1; XP3 - сигнал сравнения текущего адреса микропрограммы с адресом, задаваемым соответствующим набирателем; ZP5 - сигнал внутренней синхронизации устройст-ва.</p>
  <div align="left"><A NAME = 'Загрузка микропрограмм'></A></div><H4>Загрузка микропрограмм</H4>	
 <p>Для загрузки микропрограмм в память или контроля содержимого памяти необходимо:</p>
  <ol><li>переключателем АДРЕС набрать нужный адрес;</li>
  		<li>переключателем МУЛЬТИПЛЕКСОР установить номер тетрады;</li>
		<li>переключателем ДАННЫЕ набрать нужный код записываемых данных в выбранную тетраду;</li>		
		<li>нажать кнопку ЗАГРУЗКА; </li>
		<li>по индикатору ПАМЯТЬ проконтролировать правильность занесения данных;</li>
		<li>6.	повторить выполнение пп. 3 - 6 для всех тетрад.</li>
  </ol>
 <div align="left"><A NAME = 'Выполнение микропрограмм'></A></div><H4>Выполнение микропрограмм</H4>  
 <p>В режиме РАБОТА устройство может выполнять микропрограмму либо по шагам, либо автоматически от внутреннего или внешнего генераторов. Пошаговый режим устанавливается переключателем ШАГ/АВТОМАТ. В режиме ШАГ синхронизация устройства осуществляется от кнопки ПУСК: при каждом нажатии выполняется одна микрокоманда.</p>
 <p>Для автоматического выполнения программы переключатель ставится в положение АВТОМАТ, затем после нажатия кнопки ПУСК микрокоманды будут выполнятся одна за другой по сигналам, формируемым внешним или внутренним синхрогенераторами. Для запуска микропро-граммы произвести начальную установку регистра МК, для чего: после окончания загрузки по-следней микрокоманды переключателем АДРЕС задать код стартового адреса  микропрограммы; нажать один раз на кнопку ПУСК4; переключатель ЗАГРУЗКА/РАБОТА установить в положе-ние РАБОТА; нажимая на кнопку ПУСК, последовательно выполнять микрокоманды, контроли-руя их выполнение по индикаторам ДАННЫЕ и МИКОКОМАНДА.</p>
 <div align="left"><A NAME = '4.Задания и порядок выполнения лабораторных работ'></A></div><H1>4.Задания и порядок выполнения лабораторных работ</H1>  
<p>Задания на лабораторную работу студенты получают на предыдущем занятии.
При подготовке к занятию должны составляться: <ul><li>схема алгоритма реализуемой микро-программы;</li>
<li>кодированная таблица (листинг) микропрограммы с необходимыми комментариями; </li>
<li>предварительный  протокол отладки. </li></ul>
<p>Образцы указанных документов представлены на <a href ='img/pic7.gif' target="list">рис  7.</a> и таблицах <a href ='img/pic_tab12.gif' target="list">табл.12</a>,<a href ='img/pic_tab13.gif' target="list">табл.13</a>. При составлении листинга и протокола отладки следует пользоваться восьме-ричной системой записи кодов.</p>
<p>В начале каждого занятия подготовленные к занятиям материалы контролируются преподавателем.
Непосредственно на занятии отлаживаются на микротренажере заданные микропрограммы. Для этого необходимо произвести следующие действия:
</p> 
<ol><li>коды микрокоманд микропрограммы загружаются в память микропрограмм в режиме ЗАГРУЗКА, при этом правильность набора микрокоманд контролируется по индикатору ПАМЯТЬ;</li>
	<li>проводится начальная установка, т.е. в регистр МК считывается микрокоманда по стартовому адресу микропрограммы;</li>
	<li>микротренажер переводится в режим РАБОТА и пошагово выполняется микро-программа, при этом правильность ее работы контролируется по показаниям ин-дикатора ДАННЫЕ в точках, установленных протоколом отладки. В случае не-совпадений показаний индикатора и подготовленного заранее протокола выясня-ется их причина, для этого в первую очередь контролируется код выполняемой микрокоманды по индикатору МИКРОКОМАНДА и содержимое операционных регистров;</li>
	<li>скорректированные протокол отладки и листинг отлаженной микропрограммы предъявляются преподавателю.</li>
</ol>
<p>По каждой работе составляется отчет, включающий в себя:</p>
<ul><li>наименование и цель занятия; </li>
	<li>задание на лабораторную работу; </li>
	<li>схему алгоритма или описание микропрограммы, на уровне межрегистровых передач; </li>
	<li>листинг микропрограммы;</li>
	<li>протокол отладки.</li>
</ul>
<p>Отчет по выполняемой работе предъявляется преподавателю на следующем занятии.</p>  

 <div align="left"><A NAME = 'Лабораторная работа №1'></A></div><H1>Лабораторная работа №1</H1>
<div align="left"><A NAME = 'Лабораторная работа №1'></A></div><H4>Выполнение арифметических микропрограмм</H4>
<p>При выполнении работы должна быть составлена и отлажена микропрограмма, реали-зующая такую последовательность действий:</p>
<center>X->R<sub>i</sub>; Y->R<sub>j</sub>; R<sub>i</sub>* R<sub>j</sub>-> R<sub>i</sub>; R<sub>i</sub>->R<sub>k</sub>.</center>
<p>Значения данных и номеров регистров приведены в <a href ='img/pic_tab14.gif' target="list">табл.14</a>.</p>
 
<div align="left"><A NAME = 'Лабораторная работа №2'></A></div><H1>Лабораторная работа №2</H1>
<div align="left"><A NAME = 'Лабораторная работа №2'></A></div><H4>Выполнение ветвлений вычислительного процесса</H4>
<p>Заданием на лабораторную работу является составление следующих микропрограмм:</p>
<p>Вариант 1. Записать в R2 наибольшее из чисел, хранящихся в регистрах R0 и R1.</p>
<p>Вариант 2. Записать в Q наименьшее из чисел, хранящихся в регистрах R2 и R3.</p>
<p>Вариант 3. Записать в R1 модуль числа, хранящегося в регистре R0.</p>
<p>Вариант 4. В регистрах R0, R1 и R2, R3 записаны два 8-разрядных числа. Записать в реги-стры R4, R5 сумму этих чисел (в регистре с меньшим номером должна храниться младшая часть соответствующего числа).</p>
<p>Вариант 5. В регистрах R2 и R3; R4 и R5 записаны два 8-разрядных числа. Записать в ре-гистры R0 и R1 разность этих чисел.</p>
<p>Вариант 6. Вычислить в регистре R2 сумму двоично-десятичных чисел, хранящихся в ре-гистрах R0 и R1.</p>
<p>Во всех вариантах, кроме 6-го, числа должны быть представлены в дополнительном коде.</p>

<div align="left"><A NAME = 'Лабораторная работа №3'></A></div><H1>Лабораторная работа №3</H1>
<div align="left"><A NAME = 'Лабораторная работа №3'></A></div><H4>Выполнение сдвигов и организация циклов</H4>
<p>Заданием на лабораторную работу является разработка и отладка микропрограммы под-счета количества единиц, содержащихся в кодах в регистрах R0 и R1, которое необходимо под-считывать в регистре RQ. Регистр R2 следует использовать как счетчик цикла.
Опрос значений разрядов кодов в регистрах R0 и R1 проводить путем умножения на мас-ку 0001 или 1000 с последующим сдвигом вправо или влево.
Увеличение Q на единицу реализовать как отдельную подпрограмму, вызываемую коман-дой условного перехода к подпрограмме. Для организации цикла необходимо использовать ко-манды условных переходов либо выполнять переход с помощью команд: "окончить цикл" и "вытолкнуть из стека", если F=0.
</p>

<div align="left"><A NAME = 'Лабораторная работа №4'></A></div><H1>Лабораторная работа №4</H1>
<div align="left"><A NAME = 'Лабораторная работа №4'></A></div><H4>Изучение алгоритмов выполнения операций умножения</H4>
<p>Заданием на лабораторную работу является разработка и отладка микропрограмм умно-жения 4-разрядных чисел.</p>
<p>Вариант 1. Числа представлены в дополнительном коде.</p>
<p>Вариант 2. Сомножители - положительные числа без знака.</p>
<p>В обоих вариантах при составлении микропрограммы необходимо учитывать, что при формировании очередной суммы частных произведений возможно переполнение разрядной сет-ки, которое должно корректироваться последующим сдвигом вправо.
Для сокращения объема микропрограммы счетчик циклов не программировать, а для вы-хода из цикла использовать команду перехода с пульта управления.
</p>

<div align="left"><A NAME = 'Литература:'></A></div><H1>Литература:</H1>
<ol><li>1.	Проектирование цифровых систем на комплектах микропрограммируемых БИС /под ред. В.Г. Колесникова. - М.: Радио и связь, 1984. - 240 с.</li>
	<li>2.	Балашов Е.П., Пузанков Д.В. Проектирование микропроцессорных устройств с разрядно модульной организацией. - кн. 1. -М.: Мир, 1984. - 320 с. </li>
</ol>

<p></p>
<p></p>


  
  </table>
</center>
<div align="left"></div>
</body>
</html>
