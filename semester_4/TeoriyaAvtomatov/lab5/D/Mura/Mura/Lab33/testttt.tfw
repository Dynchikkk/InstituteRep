////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 9.1i
//  \   \         Application : ISE
//  /   /         Filename : testttt.tfw
// /___/   /\     Timestamp : Sun May 19 18:09:03 2024
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: testttt
//Device: Xilinx
//
`timescale 1ns/1ps

module testttt;
    reg IN_C = 1'b0;
    reg IN_RST = 1'b0;
    reg IN_x0 = 1'b0;
    reg IN_x1 = 1'b0;
    reg IN_x2 = 1'b0;
    reg IN_x3 = 1'b0;
    reg IN_x4 = 1'b0;
    wire y0;
    wire y1;
    wire y2;
    wire y3;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 0;

    initial    // Clock process for IN_C
    begin
        #OFFSET;
        forever
        begin
            IN_C = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) IN_C = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    schema3_1 UUT (
        .IN_C(IN_C),
        .IN_RST(IN_RST),
        .IN_x0(IN_x0),
        .IN_x1(IN_x1),
        .IN_x2(IN_x2),
        .IN_x3(IN_x3),
        .IN_x4(IN_x4),
        .y0(y0),
        .y1(y1),
        .y2(y2),
        .y3(y3));

    initial begin
        // -------------  Current Time:  85ns
        #85;
        IN_RST = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  285ns
        #200;
        IN_RST = 1'b0;
        IN_x0 = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  485ns
        #200;
        IN_x0 = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  685ns
        #200;
        IN_x3 = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  885ns
        #200;
        IN_x1 = 1'b1;
        IN_x3 = 1'b0;
        // -------------------------------------
    end

endmodule

