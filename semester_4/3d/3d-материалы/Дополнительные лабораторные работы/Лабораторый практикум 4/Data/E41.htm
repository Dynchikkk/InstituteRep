<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Постановка задачи и классы алгоритмов удаления невидимых линий и поверхностей</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<style type="text/css">
<!--
body {
	background-image: url(Fon.jpg);
}
.style1 {
	color: #009900;
	font-weight: bold;
	font-style: italic;
}
-->
</style>
</head>
<body>
<h2 align="center" class="style1">Постановка задачи и классы алгоритмов удаления невидимых линий и поверхностей</h2>
<p align="justify">Задача удаления невидимых линий и поверхностей является одной из наиболее сложных в машинной графике. Алгоритмы удаления невидимых линий и поверхностей служат для определения линий, ребер, поверхностей или объемов, которые видимы или невидимы для наблюдателя, находящегося в заданной точке пространства. </p>
<p align="justify">Формально задача представляется следующим образом. В объектном пространстве <strong><em>R<sup>3</sup></em></strong> выделим некоторую картинную плоскость <strong><em>R<sup>2</sup></em></strong>. Пусть в объектном пространстве находится некоторая поверхность <strong><em>S</em></strong>, расположенная по одну сторону от картинной плоскости. Считаем, что наблюдатель расположен по другую сторону от картинной плоскости в центре проецирования. В случае параллельной проекции центр проецирования бесконечно удален. Точка <strong><em>p<sub>1</sub></em></strong> поверхности <strong><em>S </em></strong> загораживает точку <strong><em>p<sub>2</sub></em></strong> этой поверхности, если проекции этих точек на картинную плоскость совпадают и при этом точка <strong><em>p<sub>1</sub></em></strong> оказывается расположенной между <strong><em>p<sub>2</sub></em></strong> и их общей проекцией на картинную плоскость. Точка <strong><em>p </em></strong> поверхности называется видимой, если эта точка не загорожена никакой другой точкой поверхности. </p>
<p align="justify">Сложность задачи удаления невидимых линий и поверхностей привела к появлению большого числа различных способов ее решения. Наилучшего (оптимального) решения общей задачи удаления невидимых линий и поверхностей не существует. Для моделирования процессов в реальном масштабе времени, например, для авиационных тренажеров, требуются алгоритмы, которые могут порождать результаты с частотой обновления изображений порядка несколько десятков кадров в секунду. Для машинной мультипликации требуются алгоритмы, которые могут генерировать сложные реалистические изображения без жестких ограничений по времени. </p>
<p align="justify">Существует тесная связь между скоростью работы алгоритма и детальностью его результатов. Ни один из алгоритмов не может достигнуть высоких оценок одновременно по этим двум показателям. </p>
<p align="justify">По мере создания все более быстрых алгоритмов можно строить все более детальные изображения. Важную роль при этом играют возможности аппаратных средств. </p>
<p align="justify">Алгоритмы удаления невидимых линий или поверхностей можно классифицировать по четырем основным характеристикам: </p>
<ul>
  <li> способу представления объектов; </li>
  <li> способу визуализации сцены; </li>
  <li> пространству, в котором производится анализ видимости; </li>
  <li> виду получаемого результата. </li>
</ul>
<p align="justify">В качестве возможных способов представления объектов могут выступать <strong>аналитические (явные и неявные), параметрические и полигональные</strong>. </p>
<p align="justify">Каждый из возможных способов представления объектов имеет свои особенности: </p>
<ul>
  <li> 
    <div align="justify"><strong>аналитический </strong> - поверхность представлена неявно при помощи аналитического выражения; такое представление обычно используется для задания простых объектов - сфер, конусов, цилиндров и т. д.; </div>
  </li>
  <li> 
    <div align="justify"><strong>параметрический </strong> - в виде набора частей, каждая из которых представляет собой поверхность, заданную параметрически; </div>
  </li>
  <li> 
    <div align="justify"><strong>полигональный </strong> - поверхность представлена совокупностью многоугольных граней. </div>
  </li>
</ul>
<p align="justify">Как правило, объекты представлены набором выпуклых плоских граней, например треугольников (полигональный способ), которые могут пересекаться одна с другой только вдоль ребер. </p>
<p align="justify">Существуют два различных способа изображения трехмерных тел – <strong>каркасное </strong>и <strong>сплошное </strong>. Тем самым возникают <strong>два типа задач </strong> – удаление невидимых линий (ребер) для каркасных изображений и удаление невидимых поверхностей (граней) для сплошных изображений. </p>
<p align="justify">Анализ видимости объектов можно производить как в исходном трехмерном пространстве, так и на картинной плоскости. По типу пространства, в котором происходит анализ видимости, алгоритмы делятся на три группы: <em></em></p>
<ul>
  <li> 
    <div align="justify"><strong>объектные </strong> - алгоритмы, работающие в объектном пространстве; </div>
  </li>
  <li> 
    <div align="justify"><strong>картинные </strong> - алгоритмы, работающие в плоскости изображения; </div>
  </li>
  <li> 
    <div align="justify"><strong>смешанные </strong> - использующие как первый, так и второй подход. </div>
  </li>
</ul>
<p align="justify">Получаемый результат представляет собой либо набор видимых областей или отрезков, заданных с машинной точностью (имеет непрерывный вид), либо информацию о ближайшем объекте для каждого пиксела экрана (имеет дискретный вид). </p>
<p align="justify"><strong>Алгоритмы, работающие в объектном пространстве</strong>,  имеют дело с физической (мировой) системой координат, в которой описаны эти объекты. При этом получаются весьма точные результаты, ограниченные лишь точностью вычислений. Данные алгоритмы могут работать и с проекциями объектов на картинную плоскость, выделяя на ней области, соответствующие видимым частям объекта. Полученные изображения можно свободно увеличивать во много раз. Алгоритмы, работающие в объектном пространстве, особенно полезны в тех приложениях, где необходима высокая точность. Так как эти методы работают с непрерывными исходными данными и получающиеся результаты не зависят от растровых свойств, то их иногда называют непрерывными ( continuous methods ). </p>
<p align="justify">Так как в алгоритмах данного класса каждый объект сцены сравнивается со всеми остальными объектами, то объем вычислений растет теоретически как квадрат числа объектов - <strong><em>n<sup>2</sup> </em></strong>( <strong><em>n </em></strong> - число объектов в сцене). Следует иметь в виду, что непрерывные методы, как правило, достаточно сложны. </p>
<p align="justify"><strong>Алгоритмы, работающие в пространстве изображений, </strong> имеют дело с системой координат экрана. Поэтому их называют дискретными методами. Они дают приближенное решение задачи видимости, т.к. точность вычислений ограничена разрешающей способностью экрана. Они очень сильно привязаны к растровым свойствам картинной плоскости и фактически заключаются в определении для каждого пиксела той грани, которая является ближайшей к нему вдоль направления проецирования. Изменение разрешения приводит к необходимости полного перерасчета всего изображения. </p>
<p align="justify">Всем методам данного класса свойственны ошибки дискретизации. Результаты, полученные в пространстве изображений, а затем увеличенные во много раз, могут не соответствовать исходной сцене. Однако дискретные алгоритмы, как правило, отличаются простотой. </p>
<p align="justify">Объем вычислений алгоритма, работающего в пространстве изображений и сравнивающего каждый объект сцены с позициями всех пикселей в системе координат экрана, растет теоретически как <strong><em>C </em></strong><strong><em>&#215 </em></strong><strong><em>n </em></strong>(<strong><em>C </em></strong> - количество пикселей на экране, <strong><em></em></strong><strong><em>n </em></strong> – количество объектов). Теоретически трудоемкость алгоритмов, работающих в объектном пространстве, меньше трудоемкости алгоритмов, работающих в пространстве изображений, при <strong><em>n &lt; </em></strong><strong><em>N</em></strong>. Однако на практике это не всегда так, т.к. в алгоритмах, работающих в пространстве изображений, применяются методы, позволяющие значительно уменьшить число просматриваемых пикселей. </p>
<p align="justify"><strong>Существует достаточно большое число смешанных алгоритмов, </strong> работающих как в объектном пространстве, так и в картинной плоскости. Они выполняют часть работы с непрерывными данными, так и с дискретными данными. </p>
<p align="justify">В качестве структур данных для задач удаления невидимых линий и поверхностей применяются массивы, списки и различные древовидные структуры.</p>

</body>
</html>
