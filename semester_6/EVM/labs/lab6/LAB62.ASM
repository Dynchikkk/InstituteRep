stseg   segment para stack
    ; Стек (100h слов)
    dw 100h dup (?)
stseg   ends

dseg    segment para
    ; Объявление переменных
    msg db 'Belyaev Demin Sergunov', 0  ; Строка завершается нулём
dseg    ends

cseg    segment para
lab62   proc far
    assume cs:cseg, ds:dseg, ss:stseg

    ; Инициализация сегментов данных
    mov ax, dseg
    mov ds, ax
    mov es, ax

    ; Установка видеорежима 03h (текстовый 80x25)
    mov ax, 0003h
    int 10h

    ; Заполнение экрана триколором
    ; Верхняя красная полоса (8 строк)
    mov ax, 0608h       ; Функция 06h: прокрутка, AL = 8 строк
    mov bh, 40h         ; Красный фон (0x4) + чёрный текст (0x0)
    xor cx, cx          ; Координаты: верхний левый угол (0,0)
    mov dx, 074Fh       ; Координаты: нижний правый угол (7,79)
    int 10h

    ; Средняя белая полоса (9 строк)
    mov ax, 0609h       ; AL = 9 строк
    mov bh, 0F0h        ; Белый фон (0xF) + чёрный текст (0x0)
    mov cx, 0800h       ; Координаты: (8,0)
    mov dx, 104Fh       ; Координаты: (16,79)
    int 10h

    ; Нижняя красная полоса (8 строк)
    mov ax, 0608h       ; AL = 8 строк
    mov bh, 40h         ; Красный фон (0x4)
    mov cx, 1100h       ; Координаты: (17,0)
    mov dx, 184Fh       ; Координаты: (24,79)
    int 10h

    ; Настройка позиции вывода текста: строка 12, колонка 30
    mov dh, 12          ; Номер строки
    mov dl, 30          ; Номер колонки
    mov si, offset msg  ; Указатель на строку

print_loop:
    ; Установка курсора в текущую позицию
    mov ah, 02h
    mov bh, 0
    int 10h

    ; Проверка конца строки (нулевой символ)
    mov al, [si]
    test al, al
    jz end_print

    ; Чтение текущего атрибута экрана (функция 08h)
    mov ah, 08h
    int 10h           ; После вызова AH содержит атрибут текущей ячейки

    ; Вычисление «противоположного» цвета текста:
    ; Извлекаем фон (старшие 4 бита) и вычисляем его дополнение до 0Fh
    mov al, ah
    and al, 0F0h      ; Изолируем фон
    mov cl, 4         ; Используем CL для сдвига
    shr al, cl        ; AL = значение фона (0..F)
    mov bl, 0Fh
    sub bl, al        ; BL = противоположный цвет (0..F)
    and ah, 0F0h      ; Очищаем младшие 4 бита атрибута
    or ah, bl        ; Вставляем противоположный цвет текста

    ; Вывод символа с вычисленным атрибутом (функция 09h)
    mov al, [si]     ; Символ для вывода
    mov bh, 0        ; Страница 0
    mov bl, ah       ; Итоговый атрибут (фон + текст)
    mov ah, 09h
    mov cx, 1       ; Вывод одного символа
    int 10h

    ; Переход к следующему символу и перемещение курсора вправо
    inc si
    inc dl
    jmp print_loop

end_print:
    ; Ожидание нажатия клавиши
    mov ah, 00h
    int 16h

    ; Завершение программы
    mov ax, 4C00h
    int 21h

lab62   endp
cseg    ends
end lab62
