<html>
<head>
<title>Программные средства</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="center">Программные средства для управления аппаратными ресурсами ПЭВМ 
</h1>
<p>Существуют 3 уровня программного доступа к средствам вычислительной системы 
  (рис.1).</p>
<p align="center"><br>
  <img src="images/bois_os_1.gif" width="425" height="330"> </p>
<p align="center">Рис.1. Уровни программного доступа к средствам ПЭВМ </p>
<p>&nbsp;</p>
<p>Неотъемлемой частью ПЭВМ является ПЗУ, в котором записана <b>Базовая Система 
  Ввода-Вывода (BIOS</b> - Basic Input Output System). Дополнительная часть BIOS 
  располагается на внешней памяти и переписывается в ОЗУ в процессе загрузки. 
  BIOS содержит программы обслуживания периферийного оборудования и таблицы данных 
  и составляет следующий уровень доступа к системным возможностям. Доступ к средствам 
  BIOS обеспечивается программными прерываниями. Из 256 возможных в ПЭВМ прерываний 
  прерывания с номерами от 0 до F (здесь и далее все номера прерываний шестнадцатиричные) 
  - аппаратные. Прерывания с номерами от 10 до 1F могут генерироваться только 
  программным путем при помощи команды процессора int и приводят к выполнению 
  той или иной программы из состава BIOS. </p>
<p>Перед обращением к BIOS программист должен занести в определенные регистры 
  входные параметры для программы BIOS, выходные параметры BIOS также возвращает 
  через регистры. Выполняемые функции, а также входные и выходные регистры определены 
  отдельно для каждого прерывания BIOS. После получения инструкции int процессор 
  записывает в стек регистр флагов и адрес возврата (CS:IP), затем смотрит номер 
  прерывания в таблице векторов прерываний и вызывает операцию, ассоциируемую 
  с найденным в таблице вектором прерывания. Выполнение продолжается до тех пор, 
  пока процессор не получит команду iret, после чего процессор возвращается к 
  адресу, сохраненному в CS:IP и восстанавливает все свои флаги.</p>
<p>Прерывания вызываются записью определенных значений в регистры (стек при этом 
  не используется) и подачей команды INT. некоторые прерывания имеют несколь функций, 
  которые определяются по значению, содержащемуся в АН, эти функции могут иметь 
  еще и под-функции, которые определяются по значению регистра AL.</p>
<p><b>Сервисы BIOS</b>: Int5h - клавиша PrintScreen, Int10h - обслуживание видеосистемы, 
  Int13h - обслуживание дисков, Int14h - управление коммуникационным портом, Int15h 
  - поддержка джойстика, Int16h - обслуживание клавиатуры, Int17h -00 - обслуживание 
  принтера.</p>
<p> Системные сервисы: Int11 - Статус оборудования, Int12 - Размер памяти.Int18 
  - Ошибка процесса загрузки. Вызывает ROM Basic, если доступно.Int19 - Перезагрузка 
  компьютера. Int1B - Control-Break указатель. </p>
<p>&nbsp;</p>
<p>Диапазон программных прерываний от 20 до 3F зарезервирован для обращений к 
  операционной системе <b>MS DOS</b> (в дальнейшем - просто DOS). Программы DOS 
  для доступа к аппаратным средствам используют средства BIOS и обеспечивают более 
  высокий по сравнению с BIOS уровень интеграции функций. Наиболее часто используемое 
  прерывание при обращениях к DOS - 21.</p>
<p>Перед выполнением в программе пользователя команды INT 21H программист должен 
  занести в регистр AH некоторый код - номер той программы из состава DOS, которую 
  требуется выпол- нить. Остальные регистры, как и при обращении к BIOS, используются 
  для передачи параметров. Принято говорить о &quot;функции DOS номер NN&quot;, 
  имея в виду обращение к прерыванию 21 с кодом NN в регистре AH. Некоторые функции 
  созданы разработчиками системы &quot;для внутреннего использования&quot;: они 
  вызываются из других функций и программ DOS, их описания отсутствуют в документации 
  фирм IBM и Microsoft и, видимо, не предполагалось обращение к ним из программ 
  пользователя.</p>
<p>Несмотря на это, в некоторых источниках можно найти описание ряда недокументированных 
  функций DOS. Для некоторых задач обращение к недокументированной функции DOS 
  является полезным, а возможно, и единственным путем решения, но следует всегда 
  иметь в виду, что одинаковая работа одной и той же недокументированной функции 
  в разных версиях DOS не гарантируется.<br>
</p>
<p>Наконец, языки высокого уровня включают в себя процедуры и функции, обеспечивающие 
  еще более высокий уровень интеграции. Как правило, эти процедуры/функции имеют 
  содержательные имена и использующий их программист не обязан знать, через какой 
  уровень эти процедуры/функции воздействуют на аппаратные средства. Средства 
  языков должны быть предметом отдельного рассмотрения, которое в наши задачи 
  не входит.</p>
<p>Функции операционной системы, команды языков высокого уровня скрывают от пользователя 
  сущность операции ввода вывода. В действительности в ПК есть только две команды 
  ввода-вывода:<br>
  IN и OUT, которые позволяют записать или считать байт из указанного им порта 
  ввода-вывода. Процессоры Intel могут адресовать 65536 портов ввода-вывода.Каждое 
  устройство ввода-вывода получает в свое распоряжение некоторый диапазон адресов. 
  Для большинства устройств эти диапазоны стандартизированы, благодаря чему конфликтов 
  между устройствами не возникает.<br>
  <br>
  Идеальным, конечно, является использование на каждом уровне только средств ближайшего 
  снизу уровня, но идеал редко осуществим полностью, поэтому, в частности, программа 
  пользователя имеет доступ ко всем уровням. Хотя в соответствии с целями нашего 
  пособия смешения обращений на разные уровни встречаются здесь почти повсеместно, 
  в практической работе автор является убежденным приверженцем идеала и горячо 
  рекомендует его своим читателям. При решении прикладных задач каждое обращение 
  к более низкому уровню должно быть непременно оправдано либо функциональной 
  необходимостью, либо существенным выигрышем в эффективности. Такой подход, во-первых, 
  существенно упрощает программирование и дает лучшую защиту от программистских 
  ошибок, а во-вторых, лучше обеспечивает независимость программного изделия от 
  конфигурации аппаратных средств и от версии DOS.</p>
<p></p>
<p>Подробно использование <b>BIOS</b> для управления вводом-выводом, а также управление 
  периферией непосредственно через порты изложено в книгах <a href="../library/frolov/278.html">[6]</a><a href="../library/jourdain/index.htm">,[7].</a> 
  Особенности фунции DOS представлены в книгах <a href="../library/v01a/index.html">[9]</a>,<a href="../library/v01b/index.html">[10]</a>.</p>
<hr class=forhr align="center">
<div align="center">
  <table width="600">
    <tr> 
      <td> 
        <p align="center">&nbsp;</p>
      </td>
      <td> 
        <p align="center"><b> <a href="perif.htm">в начало раздела</a></b></p>
      </td>
      <td> 
        <p align="center">&nbsp;</p>
      </td>
    </tr>
  </table>
</div>
<h1>&nbsp;</h1  >
<p><br>
  <br>
</p>
</body>
</html>
