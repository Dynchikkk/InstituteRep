<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="center">Каналы ввода-вывода.</h1>
<p>Любые вычислительные машины взаимодействуют с окружающей средой. </p>
<p>По производительности устройства делятся на классы:  <br>
<li>низкоскоростные &lt;1000 символов в секунду (клавиатура, принтеры)  </li><br>
  <li>среднескоростные 1000-100000 символов в секунду (печатающие устройства, модемы, 
  гибкие магнитные диски, АЦП, ЦАП) </li> <br>
   
<li>высокоскоростные &gt;100000 символов в секунду (скоростные АЦП, видеосистемы, 
  магнитные диски). </li><br>
<p>По принципу работы устройства можно разделить на:<br>
  Блочно-ориентированные .Дисковые накопители, стримеры - все устройства имеющие 
  файловую систему <br>
  Байт-ориентированные Клавиатура, мышь, модемы, принтеры. <br>
  Так же следует учесть существенные различия между УВВ не зависящие от класса:<br>
  1.Скорость передачи данных.<br>
  2.Применение.<br>
  3.Сложность управления.<br>
  4.Единицы передачи данных.<br>
  5.Представление данных.<br>
  6.Условия ошибок.<br>
  Такое разнообразие затрудняет разработку единого и согласованного подхода к 
  решению проблемы ввода-вывода.Чтобы упростить работу с устройствами ввода-вывода 
  и снизить вероятность возникновения ошибок, желательно иметь возможность одинакового 
  управления различными устройствами.<br>
</p>
<p>Производительность ЦП всегда гораздо больше, чем устройств ввода/вывода, так 
  как они либо электромеханические, либо связаны с взаимодействием с пользователем, 
  и процесс ввода/вывода асинхронен с ЦП. </p>
<p> Комплекс апараратно-прграммных средсв, управляющих информационным обменом 
  между ядром ЭВМ (ЦП и ОП) и ПУ называется подсистемой ввода вывода или <b>каналом 
  ввода-вывода, </b>которые бывают:</p>
<p>1. Программно- управляемые, обмен в которых ведется непосредственно средствами 
  самого ЦП.<br>
  2. Прямого доступа в память (КПДП), обменом управляет специальный контроллер 
  или сопроцессор ввода/вывода , который инициализируется ЦП и передает данные 
  от заданного ПУ в заданную область ОП, или наоборот.</p>
<p>При программной реализации алгоритма обмена, в свою очередь, различают два 
  способа ввода- вывода, в зависимости от того, каким образом обнаруживается готовность 
  ПУ к обмену: первый способ- путем <b>опроса флага готовности </b>ПУи второй 
  способ- <b>по прерываниям</b> процессора от ПУ..<br>
  Алгоритм обмена, основанный на опросе флага готовности (ввод- вывод по условию 
  готовности) включает следующие шаги.<br>
  1.На этапе начальной подготовки ЦП опрашивает состояние ПУ (включено, исправно, 
  свободно) и запускает механизм ПУ (например,подает питание на электродвигатель 
  и т.п.).<br>
  Механизм ПУ имеет электромеханическую природу, поэтому инерционен и обладает 
  низким быстродействием. В связи с этим нормальное функционирование ПУ начинается 
  (возможно) лишь после того, как носитель информации (магнитный диск, например) 
  достигнет рабочей скорости. Только после этого начинается обмен информацией 
  с носителем, то есть этап передачи данных.<br>
  2.Контроллер ПУ обеспечивает управление процессом считывания (записи) информации 
  с носителя. Считывание (запись) информации обычно осуществляется байтами данных. 
  Прочитанный с носителя байт заносится в буферный регистр данных (РД), после 
  чего устанавливается флаг ГТ (Готов). В случае записи контроллер ПУ обеспечивает 
  перепись байта данных из регистра данных на носитель, после чего устанавливается 
  флаг ГТ, что означает готовность принять из ЭВМ очередной байт данных.<br>
  Процессор, обнаружив факт установки флага, осуществляет ввод (вывод) порции 
  данных из РД, а контроллер ПУ - сброс флага ГТ.<br>
  Далее процессор формирует адрес ячейки памяти, с которой ведется обмен и подсчитывает 
  количество переданной информации. <br>
  Далее осуществляется анализ на конец передачи блока данных и, если переданы 
  еще не все данные, то выполняется на сканирование флага готовности.<br>
  3.На этапе завершения обмена опрашивается состояние ПУ и выключается механизм 
  ПУ, приводящий в движение носитель информации.<br>
  Рассмотренный способ обмена обладает существенным недостатком - непроизводительные 
  затраты процессорного времени на ожидание готовности ПУ.</p>
<p>Ввод- вывод по прерываниям процессора с точки зрения производительности ЭВМ 
  более эффективен, так как время ожидания готовности ПУ процессор может использовать 
  для выполнения другой программы. При этом способе в момент готовности контроллер 
  ПУ вырабатывает сигнал прерывания, по которому процессор прерывает выполнение 
  текущей программы и приступает к обслуживанию данного ПУ. Обслуживание осуществляется 
  путем передачи управления специальной подпрограмме обмена, написанной для данного 
  ПУ, которая обеспечивает обмен с РД ПУ. После ее завершения управление возвращается 
  прерванной программе. Сигналов прерывания вырабатывается столько, сколько байтов 
  информации вводится (выводится).<br>
  Недостаток обмена по прерываниям процессора очевиден - это ощутимые накладные 
  расходы времени на передачу одного байта данных:<br>
  Поэтому обмен по прерываниям процессора применяется для обслуживания медленнодействующих 
  ПУ (клавиатура, принтер, и т. п.).<br>
  Прямой доступ к памяти от двух описанных выше способов отличается тем, что в 
  момент готовности ПУ контроллер КПДП сразу формирует запрос на обращение к памяти, 
  т. е. на захват цикла памяти. Если память в этот момент свободна, то управление 
  памятью передается КПДП, который генерирует цикл обмена с ней. Этот цикл обеспечивает 
  обмен информацией между буферным регистром данных ПУ и адресуемой ячейкой памяти. 
  Если память занята, то КПДП ждет ее освобождения и только потом генерирует свой 
  цикл обмена с ней. Аппаратная реализация ПДП обеспечивает самую высокую скорость 
  ввода- вывода информации и поэтому обычно применяется для обслуживания высокоскоростных 
  ПУ (НМД, например).<br>
</p>
<p>Особенности организации каналов ввода-вывода данных можно изучит в пособии 
  <a href="../library/book_inter/pages/princip.htm" target=_blank>[15]</a></p>
<hr class=forhr align="center">
<div align="center"> 
  <table width="600">
    <tr> 
      <td> 
        <p align="center">&nbsp;</p>
      </td>
      <td> 
        <p align="center"><b> <a href="perif.htm">в начало раздела</a></b></p>
      </td>
      <td> 
        <p align="center">&nbsp;</p>
      </td>
    </tr>
  </table>
</div>
<h1>&nbsp;</h1  >
<p><strong></strong> <strong><font color="#0000FF"></font></strong></p>
<p>&nbsp;</p>
</body>
</html>
