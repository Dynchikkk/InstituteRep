<html>
<head>
<title>Преобразование двоичного формата вASCII-формат</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="center">Преобразование двоичного формата в ASCII-формат и обратно</h1>
<h1 align="center">&nbsp;</h1>
<p>Компьютер выполняет арифметические операции над числами в двоичном формате. 
  Но ввод данных с клавиатуры и вывод на экран осуществляется в виде ASCII символов 
  в десятичном формате. В коде ASCII на каждый символ требуется 1 байт.<br>
  Данные, вводимые с клавиатуры, имеют ASCII-формат (как и данные, выводимые на 
  экран). Для выполнения арифметических операций используется преобразование в 
  двоичный формат.</p>
<p>Преобразование ASCII-формата в двоичный формат<br>
  Метод преобразования базируется на том, что ASCII-формат имеет основание 10, 
  а компьютер выполняет арифметические операции только над числами с основанием 
  2. Процедура преобразования заключается в следующем:<br>
  1. Начинают с самого правого байта числа в ASCII-формате и обрабатывают справа 
  налево. <br>
  2. Удаляют тройки из левых шестнадцати цифр каждого ASCII-байта <br>
  3. Умножают ASCII-цифры на 1, 10, 100 (01Н, 0АН, 64Н) и т.д. и складывают результаты. 
  <br>
  Коды ASCII-символов<br>
  048 30Н 0<br>
  049 31Н 1<br>
  050 32Н 2<br>
  051 33Н 3<br>
  052 34Н 4<br>
  053 35Н 5<br>
  054 36Н 6<br>
  055 37Н 7<br>
  056 38Н 8<br>
  057 39Н 9</p>
<p>Для примера рассмотрим преобразование числа 1234 из ASCII-формата в двоичный 
  формат.<br>
  4 * 1 = 4 &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<br>
  3 * 10 = 30 &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;1Е<br>
  2 * 100 = 200 &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;С8<br>
  1 * 100 = 1000 &nbsp;&nbsp;3Е8<br>
  Результат &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;04D2</p>
<p>Пример программы преобразования ASCII-числа в двоичный формат.<br>
  Предполагается, что длина ASCII-числа = 4, она записана в поле ASCLEN. Для инициализации 
  адрес ASCII-поля ASCVAL-1 заносится в SI, а длина этого поля в ВХ. Команда MOV 
  AL, [SI + BX] пересылает ASCII-байт в регистр AL. Адрес операнда (ASCVAL + 3 
  – самый правый байт поля ASCVAL). В каждом цикле содержимое ВХ уменьшается на 
  1, что приводит к обращению к следующему слева байту. В каждом цикле происходит 
  также умножение поля MULT10 на 10, что дает в результате множители 1, 10, 100 
  и т.д.<br>
  ...<br>
  <i>ASCVAL DB 1234 ; элементы данных <br>
  BINVAL DB 0<br>
  ASCLEN DB 4<br>
  MULT10 DB 1<br>
  MAIN PROC NEAR ; основная процедура <br>
  CALL B10ASBT ; преобразование ASCII <br>
  CALL C10BIAS ; преобразование двоичное<br>
  RET <br>
  MAIN ENDP <br>
  B10ASBI PROC <br>
  MOV CX, 10 ; фактор умножения<br>
  LEA SI, ASCVAL -1 ; адрес ASCVAL <br>
  MOV BX, ASCLEN ; длина ASCVAL <br>
  B20:<br>
  MOV AL, [SI + BX] ; выбрать ASCII-символ<br>
  AND AX, 000FH ; очистить зону тройки<br>
  MUL MULT10 ; умножить на 10 <br>
  ADD BINVAL, AX ; прибавить к двоичному<br>
  MOV AX, MULT10<br>
  MUL CX ; фактор умножения<br>
  MOV MULT10, AX<br>
  DEC BX ; последний ASCII-символ?<br>
  JNZ B20 ; нет – продолжить<br>
  RET </i></p>
<p>Преобразование двоичного формата в ASCII-формат<br>
  Для того, чтобы напечатать или отобразить на экране арифметический результат, 
  необходимо преобразовать его в ASCII-формат. В этой операции вместо умножения 
  используется деление двоичного числа на 10 (0А), пока результат не будет меньше 
  10. Остатки, которые лежат в границах от 0 до 9, образуют число в ASCII-формате. 
  Пример преобразования числа 4D2H в десятичный формат:<br>
</p>
<div align="justify">
  <table width="256" border="0" cellpadding="0" cellspacing="0">
    <tr>
      <td width="72" valign="top"><p>&nbsp;</p></td>
      <td width="103" valign="top"><p align="center">частное</p></td>
      <td width="102" valign="top"><p align="center">остаток</p></td>
    </tr>
    <tr>
      <td width="72" valign="top"><p align="left">4D2/A </p></td>
      <td width="103" valign="top"><p align="center">7B</p></td>
      <td width="102" valign="top"><p align="center">4</p></td>
    </tr>
    <tr>
      <td width="72" valign="top"><p align="left">7B/A</p></td>
      <td width="103" valign="top"><p align="center">C</p></td>
      <td width="102" valign="top"><p align="center">3</p></td>
    </tr>
    <tr>
      <td width="72" valign="top"><p align="left">C/A</p></td>
      <td width="103" valign="top"><p align="center">1</p></td>
      <td width="102" valign="top"><p align="center">2</p></td>
    </tr>
  </table>
  <p>Так как последнее частное 1 меньше, чем 0АН, то операция завершена. Остатки 
    вместе с последним частным образуют число (результат) в ASCII-формате, записываемый 
    справа налево -1234. Все остатки и последнее частное должны записываться в 
    память с тройками, т.е. 31323334</p>
</div>
<p>Так как последнее частное 1 меньше, чем 0АН, то операция завершена. Остатки 
  вместе с последним частным образуют число (результат) в ASCII-формате, записываемый 
  справа налево -1234. Все остатки и последнее частное должны записываться в память 
  с тройками, т.е. 31323334</p>
<p>Пример программы преобразования двоичного числа в ASCII-формат.<br>
  (смотреть предыдущий пример)</p>
<p><br>
  <i>C10BIAS PROC<br>
  MOV CX, 0010 ; фактор деления<br>
  LEA SI, ASCVAL + 3 ; адрес ASCVAL<br>
  MOV AX, BINVAL ; загрузить двоичное число<br>
  C20:<br>
  CMP AX, 0010 ; значение меньше 10<br>
  JB C30 ; да – выйти<br>
  XOR DX, DX ; очистить часть частного<br>
  DIV CX ; разделить на 10<br>
  OR DL, 30H<br>
  MOV [SI], DL ; записать ASCII-символ<br>
  DEC SI<br>
  JMP C20<br>
  C30:<br>
  OR AL, 30H ; записать последнее частное<br>
  MOV [SI], AL ; как ASCII-символ<br>
  RET </i></p>
</body>
</html>
